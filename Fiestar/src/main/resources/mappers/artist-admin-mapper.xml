<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.TeamFiestar.Fiestar.admin.model.mapper.ArtistAdminMapper">
	
	

	
	
	
	<select id="selectArtistGroupNo">
		SELECT ARTIST_GROUP_NO 
		FROM ARTIST_GROUP
		WHERE ARTIST_GROUP_TITLE = #{artistGroupTitle}
	</select>
	
	<!-- 공지사항 수 조회 -->
	<select id="noticeListCount">
		SELECT COUNT(*)
		FROM ARTIST_GROUP_NOTICE AGN 
		WHERE ARTIST_GROUP_NO = #{artistGroupNo}
		AND ARTIST_GROUP_NOTICE_DEL_FL = 'N'
		ORDER BY ARTIST_GROUP_NOTICE_NO 
	</select>
	
	<!-- 공지사항 조회 -->
	<select id="selectNoticeList">
		SELECT ARTIST_GROUP_NOTICE_NO ,ARTIST_GROUP_NOTICE_TITLE ,ARTIST_GROUP_NOTICE_CONTENT ,
		TO_CHAR(ARTIST_GROUP_NOTICE_ENROLL_DATE, 'YYYY/MM/DD') AS ARTIST_GROUP_NOTICE_ENROLL_DATE,
		ARTIST_GROUP_NO 
		FROM ARTIST_GROUP_NOTICE AGN 
		WHERE ARTIST_GROUP_NO = #{artistGroupNo}
		AND ARTIST_GROUP_NOTICE_DEL_FL = 'N'
		<if test="notice.key == 1">AND ARTIST_GROUP_NOTICE_TITLE LIKE '%${notice.noticeSearch}%'</if>
		<if test="notice.key == 2">AND ARTIST_GROUP_NOTICE_CONTENT LIKE '%${notice.noticeSearch}%'</if>
		ORDER BY ARTIST_GROUP_NOTICE_NO 
	</select>
	
	
	<insert id="artistNoticeAdd">
		INSERT INTO ARTIST_GROUP_NOTICE AGN VALUES 
		(SEQ_ARTIST_NOTICE_NO.NEXTVAL, 
		#{artistGroupNoticeTitle}, 
		#{artistGroupNoticeContent},
		'N', SYSDATE, #{artistGroupNo})
	</insert>
	
	<!-- 신고 개수 -->
	<select id="reportListCount">
		SELECT 	COUNT(*)
		FROM REPORT r  
		JOIN "MEMBER" m ON(R.REPORT_TARGET_NO = M.MEMBER_NO)
		JOIN "MEMBER" m2 ON(R.REPORTER_NO = M2.MEMBER_NO)
		WHERE R.ARTIST_GROUP_NO = #{artistGroupNo}
		<if test="report.key == 1">AND M2.MEMBER_NICKNAME LIKE '%${report.reportSearch}%'</if>
		<if test="report.key == 2">AND M2.MEMBER_EMAIL LIKE '%${report.reportSearch}%'</if>
		<if test="report.key == 3">AND M.MEMBER_NICKNAME LIKE '%${report.reportSearch}%'</if>
		<if test="report.key == 4">AND M.MEMBER_EMAIL LIKE '%${report.reportSearch}%'</if>
		<if test="report.key == 5">AND REPORT_CONTENT LIKE '%${report.reportSearch}%'</if>
	</select>
	
	<!-- 신고 조회 -->
	<select id="selectReportList">
		SELECT 	REPORT_NO , REPORTER_NO 
			REPORT_TARGET_NO , REPORT_PROCEED , REPORT_TYPE ,
			M2.MEMBER_EMAIL AS REPORTER_EMAIL,
			M2.MEMBER_NICKNAME AS REPORTER_NICKNAME,
			REPORT_CONTENT_NO ,
			M.MEMBER_EMAIL AS REPORT_TARGET_EMAIL ,
			M.MEMBER_NICKNAME AS REPORT_TARGET_NICKNAME
		FROM REPORT r  
		JOIN "MEMBER" m ON(R.REPORT_TARGET_NO = M.MEMBER_NO)
		JOIN "MEMBER" m2 ON(R.REPORTER_NO = M2.MEMBER_NO)
		WHERE R.ARTIST_GROUP_NO = #{artistGroupNo}
		<if test="report.key == 1">AND M2.MEMBER_NICKNAME LIKE '%${report.reportSearch}%'</if>
		<if test="report.key == 2">AND M2.MEMBER_EMAIL LIKE '%${report.reportSearch}%'</if>
		<if test="report.key == 3">AND M.MEMBER_NICKNAME LIKE '%${report.reportSearch}%'</if>
		<if test="report.key == 4">AND M.MEMBER_EMAIL LIKE '%${report.reportSearch}%'</if>
		<if test="report.key == 5">AND REPORT_CONTENT LIKE '%${report.reportSearch}%'</if>
	</select>
	



	<!--상품 등록-->
	<insert id="insertGoods" parameterType="Product" useGeneratedKeys="true">
		<selectKey order="BEFORE" resultType="_int" keyProperty="productNo">
			SELECT SEQ_PRODUCT_NO.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO "PRODUCT"
		VALUES(#{productNo},#{artistGroupNo},#{productName},#{productProduction},#{productPrice}, DEFAULT)
	</insert>
	
	<!--옵션 등록-->
	<insert id="insertOption">
		INSERT INTO "PRODUCT_OPTION"
		<foreach collection="list" item="p" separator="UNION">
			SELECT NEXT_PRODUCT_OPTION_NO(),
			#{p.productOptionName},
			#{p.productOptionOrder}, 
			#{p.productNo}
		 FROM DUAL
		</foreach>
		
	</insert>
	
	<!--이미지 업로드-->
	<insert id="insertImage" parameterType="ProductImage">
		<selectKey order="BEFORE" resultType="_int" keyProperty="productImageNo">
			SELECT SEQ_PRODUCT_IMAGE_NO.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO "PRODUCT_IMAGE"
		VALUES(#{productImageNo},#{productImageContent},#{productImageRename},#{productImageOriginal},#{productImageOrder}, #{productNo}, #{productImageThumbnail},
		#{productImageThumbnailRename})
	</insert>
	
	
	<!--상품 수정-->
	<update id="updateGoods">
		UPDATE "PRODUCT" SET
		PRODUCT_NAME = #{productName},
		PRODUCT_PRICE = #{productPrice},
		WHERE PRODUCT_NO = #{productNo}
	</update>
	
	
<!--	상품 옵션 수정
	<update id="updateOption">
		UPDATE "PRODUCT_OPTION" SET
		<foreach collection="list" item="p" separator="UNION">
			PRODUCT_OPTION_NAME = #{productOptionName}
			WHERE PRODUCT_NO = #{productNo}
		</foreach>
	</update>
	
	
	
	 이미지 수정
	 <update id="updateImage">
		UPDATE "PRODUCT_IMAGE" SET
      	PRODUCT_IMAGE_THUMBNAIL = #{productImageThumbnail},
      	PRODUCT_IMAGE_THUMBNAIL_RENAME = #{productImageThumbnailRename}
      	PRODUCT_IMAGE_CONTENT = #{productImageContent},
      	PRODUCT_IMAGE_RENAME = #{productImageRename}
      	WHERE PRODUCT_NO = #{productNo}
	 </update>-->
	
	
	
	
	
	
	<!-- 주문 배송 개수 -->
	<select id="orderListCount">
		SELECT COUNT(*)
		FROM PURCHASE P 
		JOIN "MEMBER" m USING(MEMBER_NO)
		WHERE PURCHASE_NO IN (
			SELECT PRODUCT_NO 
			FROM PURCHASE_LIST PL 
			WHERE PL.PRODUCT_NO IN 
				(SELECT PRODUCT_NO 
				FROM PRODUCT P 
				WHERE P.ARTIST_GROUP_NO = #{artistGroupNo}))
		
	</select>
	
	<!-- 주문 배송 조회 -->
	<select id="selectPurchaseList">
		SELECT 	PURCHASE_NO ,PURCHASE_PRICE ,
				PURCHASE_STATUS ,
				TO_CHAR(PURCHASE_DATE, 'YYYY/MM/DD') AS PURCHASE_DATE,
				MEMBER_NICKNAME,
				MEMBER_ADDRESS,
				(SELECT SUM(PL2.PRODUCT_QUANTITY) 
					FROM PURCHASE_LIST PL2 
					WHERE PL2.PURCHASE_NO = P.PURCHASE_NO) 
				AS PRODUCT_SUM
		FROM PURCHASE P 
		JOIN "MEMBER" m USING(MEMBER_NO)
		WHERE PURCHASE_NO IN (
			SELECT PL.PURCHASE_NO
			FROM PURCHASE_LIST PL 
			WHERE PL.PRODUCT_NO IN 
				(SELECT PRODUCT_NO 
				FROM PRODUCT P 
				WHERE P.ARTIST_GROUP_NO = #{artistGroupNo}))
		<if test="key == 1">AND MEMBER_NO LIKE '%${orderSearch}%'</if>
		<if test="key == 2">AND MEMBER_EMAIL LIKE '%${orderSearch}%'</if>
		<if test="key == 3">AND MEMBER_NICKNAME LIKE '%${orderSearch}%'</if>
		ORDER BY PURCHASE_DATE
	</select>
	
	
	
	
	

	
	
</mapper>

